[
    {
        "id": "1",
        "question": "What advice is run once joint-point execution is complete?",
        "options": ["@AfterFinish", "@AfterJoint", "@AfterPoint", "@After"],
        "answer": "@After"
    },
    {
        "id": "2",
        "question": "What is used to notify the completion of the session processing?",
        "options": ["BindingResult", "HttpStatus", "SessionStatus", "Session"],
        "answer": "SessionStatus"
    },
    {
        "id": "3",
        "question": "What annotation is used for finding transaction and failing it by complaining no Hibernate session is bound to thread?",
        "options": ["@TransactionFail", "@TransactionHandler", "@TransactionResolver", "@Transactional"],
        "answer": "@Transactional"
    },
    {
        "id": "4",
        "question": "What are the types of autowire in Spring? Choose the correct option.",
        "options": [
            "byName, byType, destructor, and autodetect",
            "byMethod, byName, autocorrect, and autodetect",
            "byName, byType, byValue, and autodetect",
            "byName, byType, constructor, and autodetect"
        ],
        "answer": "byName, byType, constructor, and autodetect"
    },
    {
        "id": "5",
        "question": "Which among the below classes is used for mapping database row to java object in Spring?",
        "options": ["RowMapper", "ResultSet", "RowSetMapper", "ResultSetMapper"],
        "answer": "RowMapper"
    },
    {
        "id": "6",
        "question": "Which among the below annotation represents that a field can't be null?",
        "options": ["@NotEmpty", "@NotNull", "@NeverNull", "All of the above"],
        "answer": "@NotNull"
    },
    {
        "id": "7",
        "question": "Which among the below options needs to be registered for loading the application’s root context at start time?",
        "options": ["ContextLoaderListener", "ContextLoaderStarter", "RootContextListener", "RootContextTrigger"],
        "answer": "ContextLoaderListener"
    },
    {
        "id": "8",
        "question": "Which among the ViewResolvers resolves the view name to the application’s directory?",
        "options": ["InternalResolver", "InternalViewResolver", "InternalRequestResolver", "InternalResourceViewResolver"],
        "answer": "InternalResourceViewResolver"
    },
    {
        "id": "9",
        "question": "Which of the below statements are correct about Spring?",
        "options": [
            "Spring allows developers to develop enterprise-level web applications.",
            "Spring allows developers to code in a modular way.",
            "Spring ensures that application testing is made simple.",
            "All of the above"
        ],
        "answer": "All of the above"
    },
    {
        "id": "10",
        "question": "What method arguments are used in handler methods using @RequestMapping?",
        "options": ["@Controller", "@Bean", "@RequestParam", "@Service"],
        "answer": "@RequestParam"
    },
    {
        "id": "11",
        "question": "What annotation receives values in the form of regular expression?",
        "options": ["@Pattern", "@Password", "@Email", "@Valid"],
        "answer": "@Pattern"
    },
    {
        "id": "12",
        "question": "What does the byName type of autowiring do?",
        "options": [
            "byName mode means there is no autowiring and explicit reference needs to be added.",
            "byName mode ensures that the autowiring is done by means of the property name. Spring matches and wires the properties with beans of the same name defined in the configuration file.",
            "In this mode, Spring first autowires by the constructor and if not found, it tries to autowire by type.",
            "This mode is similar to byType mode but is restricted to non-parameterised constructors."
        ],
        "answer": "byName mode ensures that the autowiring is done by means of the property name. Spring matches and wires the properties with beans of the same name defined in the configuration file."
    },
    {
        "id": "13",
        "question": "Which among the below is the Handler method annotation in Spring?",
        "options": ["@RequestMapping", "@Controller", "@Service", "@Resolve"],
        "answer": "@RequestMapping"
    },
    {
        "id": "14",
        "question": "Which method allows to start a new transaction in Spring?",
        "options": ["startSession()", "getTransaction()", "startNewTransaction()", "getSession()"],
        "answer": "getTransaction()"
    },
    {
        "id": "15",
        "question": "What is true about <props> collection configuration elements?",
        "options": ["This helps in wiring a list of values, allowing duplicates", "This helps in wiring a list of values but without any duplicates.", "This can be used to inject a collection of name-value pairs where name and value can be of any type.", "This can be used to inject a collection of name-value pairs where the name and value are both Strings."],
        "answer": "This can be used to inject a collection of name-value pairs where the name and value are both Strings."
    },
    {
        "id": "16",
        "question": "Which method gives warning from the compiler resulting from List to List unchecked conversion?",
        "options": ["createNativeQuery()", "findAll()", "updateAll()", "batchUpsert()"],
        "answer": "findAll()"
    },
    {
        "id": "17",
        "question": "What property is used for loading hibernate configuration files by the factory bean?",
        "options": ["configLocation", "config", "config.xml", "hbm-config"],
        "answer": "configLocation"
    },
    {
        "id": "18",
        "question": "Which method is used for shutting down IoC container in Spring?",
        "options": ["registerHook(shutdown)", "shutdownHook(true)", "registerShutdownHook()", "shutdownHandlerHook()"],
        "answer": "registerShutdownHook()"
    },
    {
        "id": "19",
        "question": "What attribute is used for handling web request flow?",
        "options": ["servlet-mapping", "servlet-attr", "servlet-flow", "servlet-flow-request"],
        "answer": "servlet-mapping"
    },
    {
        "id": "20",
        "question": "What class is used for giving a class behaviour of DispatcherServlet?",
        "options": ["Repository", "AbstractAction", "AbstractController", "Controller"],
        "answer": "AbstractController"
    },
    {
        "id": "21",
        "question": "Which are the modules of Data Access/Integration layer?",
        "options": [
            "JDBC, ORM, OXM, JMS, Transactions",
            "JDBC, ORM, OXM, JMS",
            "JDBC, ORM, Web, Beans",
            "JDBC, ORM, OXM, JMS"
        ],
        "answer": "JDBC, ORM, OXM, JMS, Transactions"
    },
    {
        "id": "22",
        "question": "Which of the following stands true for Spring beans?",
        "options": [
            "Spring beans are managed by the Spring IoC container.",
            "Spring beans are instantiated, assembled, and otherwise managed by a Spring IoC container.",
            "Spring beans are simple POJOs.",
            "All of the above."
        ],
        "answer": "All of the above."
    },
    {
        "id": "23",
        "question": "What is true about <set> collection configuration elements?",
        "options": [
            "This helps in wiring a list of values, allowing duplicates.",
            "This helps in wiring a list of values but without any duplicates.",
            "This can be used to inject a collection of name-value pairs where name and value can be of any type.",
            "This can be used to inject a collection of name-value pairs where the name and value are both Strings."
        ],
        "answer": "This helps in wiring a list of values but without any duplicates."
    },
    {
        "id": "24",
        "question": "Can you inject null and empty string values in Spring?",
        "options": ["Yes", "No","Yes", "No"],
        "answer": "Yes"
    },
    {
        "id": "25",
        "question": "What is RequestHandledEvent:event?",
        "options": [
            "This event is published when the Servlet Context is either initialized or refreshed.",
            "This event is published when the HTTP Request is received.",
            "This event is published when the HTTP session is initialized or refreshed.",
            "This event is published when the HTTP Request is serviced."
        ],
        "answer": "This event is published when the HTTP session is initialized or refreshed."
    },
    {
        "id": "26",
        "question": "Which of the following aspect implementations does Spring support?",
        "options": [
            "XML Schema based aspect implementation",
            "@AspectJ based aspect implementation",
            "Both of the above.",
            "None of the above."
        ],
        "answer": "Both of the above."
    },
    {
        "id": "27",
        "question": "What are the types of transaction management Spring supports?",
        "options": [
			"Programmatic transaction management",
			"Declarative transaction management",
			"Both of above.",
			"None of above."
        ],
        "answer": "Both of the above."
    },
    {
        "id": "28",
        "question": "SpEL is part of core container.",
        "options": [
			"True",
			"False",
			"True",
			"False"
        ],
        "answer": "True"
    },
    {
        "id": "29",
        "question": "Which class is used to map a database row to a java object in spring?",
        "options": [
			"ResultSet",
			"RowMapper",
			"RowSetMapper",
			"ResultSetMapper"
        ],
        "answer": "RowMapper"
    },
    {
        "id": "30",
        "question": "Which of the following class can be used to execute Sql queries in spring?",
        "options": [
			"JDBCHelper",
			"JdbcTemplate",
			"DBHelper",
			"DBTemplate"
        ],
        "answer": "JdbcTemplate"
	}
]