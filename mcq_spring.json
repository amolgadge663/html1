[
    {
		"id":"1",
        "question": "What advice is run once joint-point execution is complete?",
        "options": ["@AfterFinish", "@AfterJoint", "@AfterPoint", "@After"],
        "answer": "@After"
    },
    {
		"id":"2",
        "question": "What is used to notify the completion of the session processing?",
        "options": ["BindingResult", "HttpStatus", "SessionStatus", "Session"],
        "answer": "SessionStatus"
    },
    {
		"id":"3",
        "question": "What annotation is used for finding transaction and failing it by complaining no Hibernate session is bound to thread?",
        "options": ["@TransactionFail", "@TransactionHandler", "@TransactionResolver", "@Transactional"],
        "answer": "@Transactional"
    },
    {
		"id":"4",
        "question": "What are the types of autowire in Spring? Choose the correct option.",
        "options": [
            "byName, byType, destructor, and autodetect",
            "byMethod, byName, autocorrect, and autodetect",
            "byName, byType, byValue, and autodetect",
            "byName, byType, constructor, and autodetect"
        ],
        "answer": "byName, byType, constructor, and autodetect"
    },
    {
		"id":"5",
        "question": "Which among the below classes is used for mapping database row to java object in Spring?",
        "options": ["RowMapper", "ResultSet", "RowSetMapper", "ResultSetMapper"],
        "answer": "RowMapper"
    },
    {
		"id":"6",
        "question": "Which among the below annotation represents that a field can't be null?",
        "options": ["@NotEmpty", "@NotNull", "@NeverNull", "All of the above"],
        "answer": "@NotNull"
    },
    {
		"id":"7",
        "question": "Which among the below options needs to be registered for loading the application’s root context at start time?",
        "options": ["ContextLoaderListener", "ContextLoaderStarter", "RootContextListener", "RootContextTrigger"],
        "answer": "ContextLoaderListener"
    },
    {
		"id":"8",
        "question": "Which among the ViewResolvers resolves the view name to the application’s directory?",
        "options": ["InternalResolver", "InternalViewResolver", "InternalRequestResolver", "InternalResourceViewResolver"],
        "answer": "InternalResourceViewResolver"
    },
    {
		"id":"9",
        "question": "Which of the below statements are correct about Spring?",
        "options": [
            "Spring allows developers to develop enterprise-level web applications.",
            "Spring allows developers to code in a modular way.",
            "Spring ensures that application testing is made simple.",
            "All of the above"
        ],
        "answer": "All of the above"
    },
    {
		"id":"10",
        "question": "What method arguments are used in handler methods using @RequestMapping?",
        "options": ["@Controller", "@Bean", "@RequestParam", "@Service"],
        "answer": "@RequestParam"
    },
    {
		"id":"11",
        "question": "What annotation receives values in the form of regular expression?",
        "options": ["@Pattern", "@Password", "@Email", "@Valid"],
        "answer": "@Pattern"
    },
    {
		"id":"12",
        "question": "What does the byName type of autowiring do?",
        "options": [
            "byName mode means there is no autowiring and explicit reference needs to be added.",
            "byName mode ensures that the autowiring is done by means of the property name. Spring matches and wires the properties with beans of the same name defined in the configuration file.",
            "In this mode, Spring first autowires by the constructor and if not found, it tries to autowire by type.",
            "This mode is similar to byType mode but is restricted to non-parameterised constructors."
        ],
        "answer": "byName mode ensures that the autowiring is done by means of the property name. Spring matches and wires the properties with beans of the same name defined in the configuration file."
    },
    {
		"id":"13",
        "question": "Which among the below is the Handler method annotation in Spring?",
        "options": ["@RequestMapping", "@Controller", "@Service", "@Resolve"],
        "answer": "@RequestMapping"
    },
    {
		"id":"14",
        "question": "Which method allows to start a new transaction in Spring?",
        "options": ["startSession()", "getTransaction()", "startNewTransaction()", "getSession()"],
        "answer": "getTransaction()"
    },
    {
		"id":"15",
        "question": "What is the output of the below code?",
        "code": "import org.aspectj.lang.annotation.Aspect;\nimport org.aspectj.lang.annotation.AfterThrowing;\n@Aspect\npublic class SampleAspectClass {\n   @AfterThrowing(pointcut=\"com.interviewbit.Operations.someOperation()\", throwing=\"ex\")\n   public void doRecoveryActions(DataAccessException e){\n       throw new IllegalArgumentException();\n   }\n}",
        "options": ["IllegalArgumentException", "BeanCreationException", "Runtime Error", "NullPointerException"],
        "answer": "BeanCreationException"
    },
    {
		"id":"16",
        "question": "Which method gives warning from the compiler resulting from List to List unchecked conversion?",
        "options": ["createNativeQuery()", "findAll()", "updateAll()", "batchUpsert()"],
        "answer": "findAll()"
    },
    {
		"id":"17",
        "question": "What property is used for loading hibernate configuration files by the factory bean?",
        "options": ["configLocation", "config", "config.xml", "hbm-config"],
        "answer": "configLocation"
    },
    {
		"id":"18",
        "question": "Which method is used for shutting down IoC container in Spring?",
        "options": ["registerHook(shutdown)", "shutdownHook(true)", "registerShutdownHook()", "shutdownHandlerHook()"],
        "answer": "registerShutdownHook()"
    },
    {
		"id":"19",
        "question": "What attribute is used for handling web request flow?",
        "options": ["servlet-mapping", "servlet-attr", "servlet-flow", "servlet-flow-request"],
        "answer": "servlet-mapping"
    },
    {
		"id":"20",
        "question": "What class is used for giving a class behaviour of DispatcherServlet?",
        "options": ["Repository", "AbstractAction", "AbstractController", "Controller"],
        "answer": "AbstractController"
    }
]
